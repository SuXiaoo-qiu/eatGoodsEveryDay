<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.joeworld.mapper.ItemsCommentsMapper">

    <select id="selectCommentCounts" resultType="com.joeworld.pojo.vo.CommentLeveCountsVo" parameterType="map">
        SELECT COUNT(*) as publicCounts  FROM  items_comments
        <where>
            and  item_id=#{itemId}  and  comment_level=#{commentLevel}
        </where>
    </select>



    <select id="selectItmeComments" resultType="com.joeworld.pojo.vo.ItmeCommentVo" parameterType="map">
        SELECT
        ic.`sepc_name` as sepcName,
        ic.`comment_level` AS commentLevel,
        ic.created_time as createdTime,
        ic.`content` AS content,
        u.`nickname` AS nickname,
        u.`face` AS userFace
        FROM
        items_comments ic
        LEFT JOIN users u ON ic.user_id = u.id
        where  item_id =#{paramsMap.itemId}
        <if test=" paramsMap.commentLevel != null and paramsMap.commentLevel != '' ">
            and     ic.`comment_level`=#{paramsMap.commentLevel}
        </if>
    </select>


    <select id="searchItems" resultType="com.joeworld.pojo.vo.SearchItemsVo" parameterType="map">
        SELECT
        i.id AS itemId,
        i.sell_counts AS sellCounts,
        i.item_name AS itemName,
        ii.url AS imgUrl,
        itemSoec.priceDiscount AS price
        FROM
        `items` i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN ( SELECT item_id AS itemId, MIN( price_discount ) AS priceDiscount FROM items_spec GROUP BY item_id ) itemSoec ON i.id = itemSoec.itemId
        WHERE
        is_main = 1
        AND i.on_off_status = 1
        <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
            and i.item_name like concat('%',#{paramsMap.keywords},'%')
        </if>
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                itemSoec.priceDiscount desc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    <select id="searchItemsByThirdCat" resultType="com.joeworld.pojo.vo.SearchItemsVo" parameterType="map">
        SELECT
        i.id AS itemId,
        i.sell_counts AS sellCounts,
        i.item_name AS itemName,
        ii.url AS imgUrl,
        itemSoec.priceDiscount AS price
        FROM
        `items` i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN ( SELECT item_id AS itemId, MIN( price_discount ) AS priceDiscount FROM items_spec GROUP BY item_id ) itemSoec ON i.id = itemSoec.itemId
        WHERE
        is_main = 1
        AND i.on_off_status = 1
        and i.cat_id = #{paramsMap.catId}

        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                itemSoec.priceDiscount desc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>


    <select id="selectItemBySpecIds" resultType="com.joeworld.pojo.vo.ShopcartVo" parameterType="List">
        SELECT
            items.id AS itemId,
            items.item_name AS itemName,
            iimg.url AS itemImgUrl,
            itsp.id AS specId,
            itsp.`name` AS specName,
            itsp.price_discount AS priceDiscount,
            itsp.price_normal AS priceNormal
        FROM
            items_spec itsp
                LEFT JOIN items items ON itsp.item_id = items.id
                LEFT JOIN items_img iimg ON iimg.item_id = items.id
        WHERE
            iimg.is_main = 1
          AND itsp.id IN
        <foreach collection="paramsList" index="index" item="specIdsList" open="(" separator="," close=")">
            #{specIdsList}
        </foreach>
    </select>


    <select id="saveComments" parameterType="map">
        INSERT INTO items_comments (
            id,
            user_id,
            item_id,
            item_name,
            item_spec_id,
            sepc_name,
            comment_level,
            content,
            created_time,
            updated_time)
                VALUES
            <foreach collection="commentList" item="item" index="index" separator=",">
                (
                    #{item.commentId},
                    #{userId},
                    #{item.itemId},
                    #{item.itemName},
                    #{item.itemSpecId},
                    #{item.itemSpecName},
                    #{item.commentLevel},
                    #{item.content},
                    now(),
                    now()
                )
            </foreach>
    </select>

    <resultMap id="myComments" type="com.joeworld.pojo.vo.MyCommentVo">
    <id column="commentId" property="commentId"/>
        <result column="content" property="content"/>
        <result column="sepcName" property="sepcName"/>
        <result column="itemName" property="itemName"/>
        <result column="itemUrl" property="itemUrl"/>
        <result column="itemId" property="itemId"/>
        <result column="createdTime" property="createdTime"/>
    </resultMap>

    <select id="selectComments" resultMap="myComments" parameterType="map">
        SELECT
            ic.id AS commentId,
            ic.content AS content,
            ic.created_time AS createdTime,
            ic.sepc_name AS sepcName,
            ic.item_name AS itemName,
            ic.item_id AS itemId,
            ii.url AS itemUrl
        FROM
            items_comments ic
                LEFT JOIN items_img ii ON ic.item_id = ii.item_id
        WHERE
            ic.user_id =#{paramsMap.userId}
          AND ii.is_main = 1
        GROUP BY
            ic.id
        ORDER BY
            ic.created_time DESC
    </select>



    <select id="getMyOrderCommentsCount"  parameterType="map" resultType="int">
            SELECT
                COUNT( 1 )
            FROM
                orders od
                    LEFT JOIN order_status os ON od.id = os.order_id
            WHERE
                os.order_status IS NOT NULL
              AND od.user_id = #{paramsMap.userId}
              AND os.order_status = #{paramsMap.orderStatus}
            <if test="paramsMap.isComment != null">
              AND od.is_comment = #{paramsMap.isComment}
            </if>

    </select>


    <select id="getOrderTrend"  parameterType="map" resultType="com.joeworld.pojo.OrderStatus">
        SELECT
            o.id AS orderId,
            os.`order_status` AS orderStatus,
            os.`created_time` AS createdTime,
            os.`pay_time` AS payTime,
            os.`deliver_time` AS deliverTime,
            os.`success_time` AS successTime,
            os.`close_time` AS closeTime,
            os.`comment_time` AS commentTime
        FROM
            orders o
                LEFT JOIN order_status os ON o.id = os.order_id
        WHERE
            o.user_id =#{paramsMap.userId}
          AND o.is_delete = 0
          AND os.order_status IN ( 20, 30, 40 )
        ORDER BY
            o.id DESC

    </select>




</mapper>